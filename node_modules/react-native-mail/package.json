{
  "_args": [
    [
      {
        "raw": "react-native-mail",
        "scope": null,
        "escapedName": "react-native-mail",
        "name": "react-native-mail",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/david/pepper/pepper2"
    ]
  ],
  "_from": "react-native-mail@latest",
  "_id": "react-native-mail@3.0.5",
  "_inCache": true,
  "_location": "/react-native-mail",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-mail-3.0.5.tgz_1510241394735_0.6126159355044365"
  },
  "_npmUser": {
    "name": "chirag04",
    "email": "jain_chirag04@yahoo.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-mail",
    "scope": null,
    "escapedName": "react-native-mail",
    "name": "react-native-mail",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-mail/-/react-native-mail-3.0.5.tgz",
  "_shasum": "e497cb192a52102458f5e2a554dfc65d3fb635cb",
  "_shrinkwrap": null,
  "_spec": "react-native-mail",
  "_where": "/Users/david/pepper/pepper2",
  "author": {
    "name": "Chirag Jain",
    "email": "jain_chirag04@yahoo.com",
    "url": "http://chiragjain.tumblr.com"
  },
  "bugs": {
    "url": "https://github.com/chirag04/react-native-mail/issues"
  },
  "dependencies": {},
  "description": "A wrapper on top of MFMailComposeViewController from iOS and Mail Intent on android",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-nhcPR1HtM1TmUH5+GZcD6KiMNYs07souMDj3NfOcLQk6kUw9UXCAuGZlmuZJtu/gYNHZ/21ZQnL7ToTPZX4ZdQ==",
    "shasum": "e497cb192a52102458f5e2a554dfc65d3fb635cb",
    "tarball": "https://registry.npmjs.org/react-native-mail/-/react-native-mail-3.0.5.tgz"
  },
  "gitHead": "227d2cdae0670079bc90d57ccf0ca1473baab836",
  "homepage": "https://github.com/chirag04/react-native-mail#readme",
  "keywords": [
    "react",
    "react-native",
    "react-component",
    "ios",
    "android",
    "email",
    "MFMailComposeViewController"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "chirag04",
      "email": "jain_chirag04@yahoo.com"
    }
  ],
  "name": "react-native-mail",
  "optionalDependencies": {},
  "readme": "# react-native-mail\n\nA React Native wrapper for Apple's ``MFMailComposeViewController`` from iOS and Mail Intent on android\nSupports emails with attachments.\n\n## Installation\n\nThere was a breaking change in RN >=40. So for React Native >= 0.40: use v3.x and higher of this lib. otherwise use v2.x\n\n```bash\nnpm i --save react-native-mail # npm syntax\nyarn add react-native-mail # yarn syntax\n```\n\n### Automatic Installation\nYou can automatically link the native components or follow the manual instructions below if you prefer.\n\n ```bash\n react-native link\n ```\n\n### Manual Installation: Android\n\n* In `android/setting.gradle`\n\n```gradle\n...\ninclude ':RNMail', ':app'\nproject(':RNMail').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-mail/android')\n```\n\n* In `android/app/build.gradle`\n\n```gradle\n...\ndependencies {\n    ...\n    compile project(':RNMail')\n}\n```\n\n* if MainActivity extends Activity: register module in MainActivity.java\n\n\n```java\nimport com.chirag.RNMail.*;  // <--- import\n\npublic class MainActivity extends Activity implements DefaultHardwareBackBtnHandler {\n  ......\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    mReactRootView = new ReactRootView(this);\n\n    mReactInstanceManager = ReactInstanceManager.builder()\n      .setApplication(getApplication())\n      .setBundleAssetName(\"index.android.bundle\")\n      .setJSMainModuleName(\"index.android\")\n      .addPackage(new MainReactPackage())\n      .addPackage(new RNMail())              // <------ add here\n      .setUseDeveloperSupport(BuildConfig.DEBUG)\n      .setInitialLifecycleState(LifecycleState.RESUMED)\n      .build();\n\n    mReactRootView.startReactApplication(mReactInstanceManager, \"ExampleRN\", null);\n\n    setContentView(mReactRootView);\n  }\n\n  ......\n\n}\n```\n* else if MainActivity extends ReactActivity: register module in `MainApplication.java`\n\n```java\nimport com.chirag.RNMail.*; // <--- import\n\npublic class MainApplication extends Application implements ReactApplication {\n    ....\n\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n          new MainReactPackage(),\n          new RNMail()      // <------ add here\n      );\n    }\n  };\n\n```\n\n\n\n### Manual Installation: iOS\n\n1. Run `npm install react-native-mail --save`\n2. Open your project in XCode, right click on `Libraries` and click `Add\n   Files to \"Your Project Name\"` [(Screenshot)](http://url.brentvatne.ca/jQp8) then navigate to node_modules/react-native-mail and select RNMail.xcodeproj [(Screenshot)](https://github.com/pedramsaleh/react-native-mail/blob/master/add-xcodeproj.png?raw=true).\n3. Add `libRNMail.a` to `Build Phases -> Link Binary With Libraries`\n   [(Screenshot)](http://url.brentvatne.ca/17Xfe).\n4. Whenever you want to use it within React code now you can: `var Mailer = require('NativeModules').RNMail;`\n\n\n## Example\n```javascript\n/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React, { Component } from 'react';\nimport { View, Alert, Button } from 'react-native';\nimport Mailer from 'react-native-mail';\n\nexport default class App extends Component {\n\n  handleEmail = () => {\n    Mailer.mail({\n      subject: 'need help',\n      recipients: ['support@example.com'],\n      ccRecipients: ['supportCC@example.com'],\n      bccRecipients: ['supportBCC@example.com'],\n      body: '<b>A Bold Body</b>',\n      isHTML: true,\n      attachment: {\n        path: '',  // The absolute path of the file from which to read data.\n        type: '',   // Mime Type: jpg, png, doc, ppt, html, pdf\n        name: '',   // Optional: Custom filename for attachment\n      }\n    }, (error, event) => {\n      Alert.alert(\n        error,\n        event,\n        [\n          {text: 'Ok', onPress: () => console.log('OK: Email Error Response')},\n          {text: 'Cancel', onPress: () => console.log('CANCEL: Email Error Response')}\n        ],\n        { cancelable: true }\n      )\n    });\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Button\n          onPress={this.handleEmail}\n          title=\"Email Me\"\n          color=\"#841584\"\n          accessabilityLabel=\"Purple Email Me Button\"\n        />\n      </View>\n    );\n  }\n}\n\n\n```\n\n### Note\n\nOn Android, the `callback` will only be called if an `error` occurs. The `event` argument is unused!\n\n## Here is how it looks:\n![Demo gif](https://github.com/chirag04/react-native-mail/blob/master/screenshot.png)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/chirag04/react-native-mail.git"
  },
  "version": "3.0.5"
}
